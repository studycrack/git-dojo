#!/opt/pwn.college/bash
set -euo pipefail

cat > /tmp/gen_repo.sh <<'EOSCRIPT'
#!/bin/bash
REPO=/tmp/repo
mkdir -p "$REPO"
cd "$REPO"
git init -q

git config user.name  "studycrack"
git config user.email "studycrack@korea.com"

# 1. Randomly determine number of GOOD/BAD commits
GOOD_CNT=$(( 3 + RANDOM % 50 ))   
BAD_CNT=$(( 2 + RANDOM % 40 )) 
ALL=$((GOOD_CNT + BAD_CNT))

echo "all commits: $ALL"

# 2. Generate GOOD commits
for i in $(seq 1 "$GOOD_CNT"); do
  cat > app.sh <<EOF
#!/bin/bash
if [ 1 -eq 1 ]; then
  echo "Good $i"
fi
EOF
  chmod +x app.sh
  git add app.sh
  git commit -q -m "v${i}" 2>&1
  
  # Save the first GOOD commit hash as the base
  if [[ $i -eq 1 ]]; then
    git rev-parse HEAD > /tmp/good_commit
  fi
done

# 3. Generate BAD commits
bad_index=1
for i in $(seq 1 "$BAD_CNT"); do
  # Simple bug: remove '; then'
  cat > app.sh <<EOF
#!/bin/bash
if [ 1 -eq 1 ]
  echo "Bad $i"
fi
EOF
  chmod +x app.sh
  git add app.sh
  git commit -q -m "v$((GOOD_CNT+i))" 2>&1

  if [[ $bad_index -eq 1 ]]; then
    git rev-parse HEAD > /tmp/bug_commit   
  fi
  ((bad_index++))
done
EOSCRIPT

chmod +x /tmp/gen_repo.sh
bash /tmp/gen_repo.sh
rm /tmp/gen_repo.sh

GOOD=$(cat /tmp/good_commit)
rm /tmp/good_commit
echo "$GOOD" > /challenge/good_commit
chown root:root /challenge/good_commit
chmod 400 /challenge/good_commit

BUG=$(cat /tmp/bug_commit)
rm /tmp/bug_commit
echo "$BUG" > /challenge/bug_commit
chown root:root /challenge/bug_commit
chmod 400 /challenge/bug_commit

sudo chown -R hacker:hacker /tmp/repo
