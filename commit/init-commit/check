#!/opt/pwn.college/bash

set -e

cd /tmp/repo || {
  echo "[-] Failed to enter /tmp/repo directory!"
  exit 1
}

# Mark /tmp/repo as a trusted Git directory to avoid "dubious ownership" error
git config --global --add safe.directory /tmp/repo

# Check if the Git repo is initialized
if [ ! -d .git ]; then
  echo "[-] Git repository is not initialized in /tmp/repo!"
  exit 1
fi

# Debug: show Git status
echo "[*] Git status:"
git status

# Debug: show Git log
echo "[*] Git commit log:"
if ! git log --oneline; then
  echo "[-] git log failed. Possibly no commits exist!"
fi

# Debug: show current user and permissions
echo "[*] Current user: $(whoami)"
echo "[*] .git directory permissions:"
ls -ld .git
ls -l .git/HEAD

# Debug: show HEAD content
echo "[*] HEAD content:"
cat .git/HEAD || echo "[-] Cannot read .git/HEAD!"

# Check if at least one commit exists
if ! git rev-parse --verify HEAD >/dev/null 2>&1; then
  echo "[-] No commits found! Make sure you have committed at least once (git commit)"
  exit 1
fi

# Check if hello.txt is committed
if ! git ls-files --error-unmatch hello.txt >/dev/null 2>&1; then
  echo "[-] hello.txt is not properly committed!"
  exit 1
fi

echo "[+] All checks passed! Here is your flag:"

# Use exec-suid to read the flag file with root privileges
echo "[*] Checking exec-suid effective privileges:"
/usr/bin/exec-suid -- /usr/bin/id || echo "[-] Failed to get root via exec-suid"

echo "[*] Checking if /flag exists and is non-empty:"
/usr/bin/exec-suid -- /bin/ls -l /flag || echo "[-] Cannot access /flag"

echo "[+] All checks passed! Attempting to print flag (base64):"
/usr/bin/exec-suid -- /usr/bin/base64 /flag || echo "[-] Failed to read /flag with base64"
